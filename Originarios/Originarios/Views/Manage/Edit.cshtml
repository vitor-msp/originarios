@model Originarios.Models.Usuario
@{ ViewBag.Title = "Editar Conta"; }

@using (Html.BeginForm("Edit", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary("", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.id_usu)
    <div class="container-fluid px-0 pb-5">
        <div class="my-5 text-center">
            <h1 class="display-4 text-white text-uppercase py-3">Editar Meus Dados</h1>
        </div>
        <div class="row">
            <div class="col-lg mb-2 mx-auto w-100 px-0">
                <div class="bg-transparent rounded">
                    <div class="row">

                        <div class="form-group col-md-5 pb-4">
                            <label for="form_name">Nome completo *</label>
                            @Html.EditorFor(m => m.nome, new { htmlAttributes = new { @class = "form-control", @maxlength = "50", id = "form_nome" } })
                            @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-3 pb-4">
                            <label for="inputCPF">CPF *</label>
                            @Html.EditorFor(m => m.cpf, new { htmlAttributes = new { @class = "form-control", @maxlength = "11", id = "inputCPF" } })
                            @Html.ValidationMessageFor(model => model.cpf, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-4 pb-4">
                            <label for="inputCPF">Data de Nascimento *</label>
                            @Html.EditorFor(m => m.dt_nasc, new { htmlAttributes = new { @class = "form-control", @type = "date", id = "inputDate" } })
                            @Html.ValidationMessageFor(model => model.dt_nasc, "", new { @class = "text-danger" })
                            <input type="hidden" value="@ViewBag.dtNasc" id="hiddenDtNasc" style="display: none;" />
                        </div>

                        <div class="form-group col-md-2 pb-4">
                            <label for="inputCPF">DDD *</label>
                            @Html.EditorFor(m => m.ddd, new { htmlAttributes = new { @class = "form-control", @maxlength = "2", id = "inputDDD" } })
                            @Html.ValidationMessageFor(model => model.ddd, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-4 pb-4">
                            <label for="inputCPF">WhatsApp *</label>
                            @Html.EditorFor(m => m.whatsapp, new { htmlAttributes = new { @class = "form-control", @maxlength = "10", id = "inputWhatsApp" } })
                            @Html.ValidationMessageFor(model => model.whatsapp, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-3 pb-4">
                            <label for="inputCidade">Cidade *</label>
                            @Html.EditorFor(m => m.cidade, new { htmlAttributes = new { @class = "form-control", @maxlength = "30", id = "inputCidade" } })
                            @Html.ValidationMessageFor(model => model.cidade, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-3 pb-4">
                            <label for="inputEstado">Estado *</label>
                            @Html.EditorFor(m => m.estado, new { htmlAttributes = new { @class = "form-control", @maxlength = "2", id = "inputEstado" } })
                            @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-md-5 pb-4">
                            <label for="form_email">E-mail *</label>
                            @Html.EditorFor(m => m.email, new { htmlAttributes = new { type = "email", @class = "form-control", id = "form_email", disabled = "disabled", @readonly = "readonly" } })
                            @Html.HiddenFor(model => model.email)
                        </div>

                    </div>

                    <div class="px-2 d-flex flex-row justify-content-center">
                        @Html.ActionLink("Voltar", "Index", "Manage", routeValues: null, htmlAttributes: new { @class = "btn btn-secondary mx-2" })
                        <button type="submit" class="btn btn-warning mx-2">Salvar Dados</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br>
}